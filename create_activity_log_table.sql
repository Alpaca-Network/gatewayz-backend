-- Create activity_log table for tracking API usage and activity
-- Run this in Supabase SQL Editor

CREATE TABLE IF NOT EXISTS activity_log (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER NOT NULL,
    timestamp TIMESTAMPTZ DEFAULT NOW() NOT NULL,
    model VARCHAR(255) NOT NULL,
    provider VARCHAR(100) NOT NULL,
    tokens INTEGER NOT NULL DEFAULT 0,
    cost NUMERIC(10, 4) NOT NULL DEFAULT 0,
    speed NUMERIC(10, 2) DEFAULT 0,
    finish_reason VARCHAR(50) DEFAULT 'stop',
    app VARCHAR(100) DEFAULT 'API',
    metadata JSONB DEFAULT '{}'::jsonb,
    created_at TIMESTAMPTZ DEFAULT NOW(),

    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Create indexes for efficient queries
CREATE INDEX IF NOT EXISTS idx_activity_log_user_id ON activity_log(user_id);
CREATE INDEX IF NOT EXISTS idx_activity_log_timestamp ON activity_log(timestamp DESC);
CREATE INDEX IF NOT EXISTS idx_activity_log_model ON activity_log(model);
CREATE INDEX IF NOT EXISTS idx_activity_log_provider ON activity_log(provider);
CREATE INDEX IF NOT EXISTS idx_activity_log_user_timestamp ON activity_log(user_id, timestamp DESC);

-- Enable Row Level Security
ALTER TABLE activity_log ENABLE ROW LEVEL SECURITY;

-- Create policy: Users can only see their own activity
CREATE POLICY "Users can view own activity"
    ON activity_log
    FOR SELECT
    USING (auth.uid()::text = user_id::text);

-- Create policy: Service role can insert activity (for backend logging)
CREATE POLICY "Service role can insert activity"
    ON activity_log
    FOR INSERT
    WITH CHECK (true);

-- Grant permissions
GRANT SELECT ON activity_log TO authenticated;
GRANT INSERT ON activity_log TO service_role;

-- Add comment
COMMENT ON TABLE activity_log IS 'Tracks all API activity for users including model calls, tokens, cost, and performance metrics';
