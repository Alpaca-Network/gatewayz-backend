{
  "permissions": {
    "allow": [
      "WebFetch(domain:chutes.ai)",
      "Bash(python3.10 test_chutes_sdk.py:*)",
      "Bash(python3.10:*)",
      "Bash(python3:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: integrate Chutes.ai provider with 104 models\n\nAdd Chutes.ai as a new model provider supporting 104 models across multiple categories:\n- 69 LLM models (DeepSeek, Qwen, NousResearch, etc.)\n- 19 Image Generation models (FLUX, Stable Diffusion, etc.)\n- 5 Content Moderation models\n- 4 Embeddings models\n- Additional Text-to-Speech, Speech-to-Text, Video, and Music models\n\nChanges:\n- Add CHUTES_API_KEY configuration\n- Create static model catalog (src/data/chutes_catalog.json)\n- Implement fetch and normalize functions for Chutes models\n- Update catalog endpoints to support gateway=chutes parameter\n- Add comprehensive documentation and test scripts\n\nUsage:\n- GET /catalog/models?gateway=chutes\n- GET /catalog/models?gateway=all (includes Chutes)\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push:*)",
      "Bash(curl:*)",
      "Bash(env)",
      "Bash(cat:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\ndocs: add Featherless troubleshooting and environment setup guides\n\nAdd comprehensive documentation for fixing the Featherless 0 models issue\nand setting up environment variables across different deployment platforms.\n\nChanges:\n- Update .env.example with all provider API keys\n- Add ENVIRONMENT_SETUP.md - Complete environment variable guide\n- Add FEATHERLESS_FIX.md - Step-by-step fix for production deployment\n- Add test_featherless_endpoint.py - Diagnostic script\n\nFixes:\n- Featherless showing 0 models (missing FEATHERLESS_API_KEY in production)\n- Documents how to add API keys to Vercel/Railway deployments\n- Provides testing scripts to verify configuration\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: use null for unknown model pricing instead of zero\n\nChange Featherless and Portkey model pricing from \"0\" to null to distinguish\nbetween \"pricing unknown\" and \"actually free\".\n\nChanges:\n- Featherless models: pricing = null (API doesn''t provide pricing)\n- Portkey models: pricing = null (API doesn''t provide pricing)\n- Chutes free models: pricing = \"0\" (actually free models)\n- OpenRouter models: unchanged (has real pricing data)\n\nThis allows frontends to display:\n- null â†’ \"Pricing not available\"\n- \"0\" â†’ \"Free\"\n- \"0.000022\" â†’ \"$0.000022/token\"\n\nUpdated descriptions to clarify pricing data availability.\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: add Portkey pricing cross-reference with OpenRouter\n\nCross-reference Portkey models with OpenRouter to extract pricing data,\nsince Portkey''s API doesn''t provide pricing information.\n\nImprovements:\n- 303/500 Portkey models (60.6%) now have pricing data\n- Three matching strategies: exact, approximate, and canonical\n- Approximate matching handles :free/:extended suffixes and @ prefixes\n- Clear description indicates pricing source (OpenRouter match type)\n\nResults:\n- 235 exact matches\n- 64 approximate matches\n- 4 canonical matches\n- 197 models remain without pricing (OpenRouter doesn''t have them)\n\nPortkey pricing now shows:\n- Real pricing for matched models (e.g., \"$0.000003/token\")\n- null for unmatched models (\"Pricing not available\")\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(pip install:*)",
      "Bash(git commit:*)",
      "Bash(brew install:*)",
      "Bash(railway --version)",
      "Bash(railway status:*)",
      "Bash(railway login:*)",
      "Bash(railway logs:*)",
      "Bash(railway list:*)",
      "Bash(railway up:*)",
      "Bash(railway domain:*)",
      "Bash(railway variables:*)",
      "Bash(gh pr checkout:*)",
      "Bash(python -m pytest tests/test_referral.py -v)",
      "Bash(python tests/test_user.py)",
      "Bash(python -m pytest tests/ -v --tb=short)",
      "Bash(git mv:*)",
      "Bash(python:*)"
    ],
    "deny": [],
    "ask": []
  }
}
