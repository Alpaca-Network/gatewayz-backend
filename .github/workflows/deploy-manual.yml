name: Manual Deploy to Railway

# Manual deployment trigger
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - staging
          - production
      skip_tests:
        description: 'Skip tests (not recommended for production)'
        required: false
        type: boolean
        default: false

jobs:
  # Run tests unless explicitly skipped
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    if: ${{ !inputs.skip_tests }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: pytest tests/ -v

  # Manual deployment using Railway CLI
  deploy:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    needs: [test]
    if: always() && (needs.test.result == 'success' || inputs.skip_tests)
    environment:
      name: ${{ inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deployment confirmation
        run: |
          echo "üöÄ Manual deployment triggered"
          echo "üìç Environment: ${{ inputs.environment }}"
          echo "üî¨ Tests: ${{ inputs.skip_tests && 'SKIPPED ‚ö†Ô∏è' || 'PASSED ‚úÖ' }}"
          echo "üë§ Triggered by: ${{ github.actor }}"
          echo "üìù Commit: ${{ github.sha }}"

      # Option 1: Railway auto-deploy (if you use GitHub integration)
      - name: Trigger Railway deployment
        run: |
          echo "Railway will auto-deploy via GitHub integration"
          echo "Monitor at: https://railway.app"

      # Option 2: Railway CLI deployment (if you want explicit control)
      # Uncomment this section and add RAILWAY_TOKEN secret

      # - name: Install Railway CLI
      #   run: |
      #     npm install -g @railway/cli

      # - name: Deploy via Railway CLI
      #   env:
      #     RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      #   run: |
      #     # Deploy to specific project based on environment
      #     if [ "${{ inputs.environment }}" == "production" ]; then
      #       railway up --service backend-production
      #     else
      #       railway up --service backend-staging
      #     fi

      - name: Deployment summary
        run: |
          echo "‚úÖ Deployment initiated for ${{ inputs.environment }}"
          echo ""
          echo "Next steps:"
          echo "1. Monitor Railway dashboard for deployment status"
          echo "2. Run health checks after deployment completes"
          echo "3. Verify functionality in ${{ inputs.environment }} environment"

  # Health check after deployment
  health-check:
    name: Health Check
    runs-on: ubuntu-latest
    needs: [deploy]

    steps:
      - name: Wait for deployment
        run: |
          echo "‚è≥ Waiting for deployment to complete..."
          sleep 120  # Wait 2 minutes

      - name: Health check
        run: |
          if [ "${{ inputs.environment }}" == "production" ]; then
            HEALTH_URL="${{ secrets.PRODUCTION_URL }}/health"
          else
            HEALTH_URL="${{ secrets.STAGING_URL }}/health"
          fi

          if [ -z "$HEALTH_URL" ] || [ "$HEALTH_URL" == "/health" ]; then
            echo "‚ö†Ô∏è  Health check URL not configured"
            echo "Add PRODUCTION_URL and STAGING_URL secrets to GitHub"
            exit 0
          fi

          echo "üè• Checking: $HEALTH_URL"

          # Retry logic
          for i in {1..5}; do
            HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$HEALTH_URL" || echo "000")

            if [ "$HTTP_CODE" == "200" ]; then
              echo "‚úÖ Health check passed (HTTP $HTTP_CODE)"
              exit 0
            else
              echo "‚è≥ Attempt $i/5 - HTTP $HTTP_CODE, retrying..."
              sleep 30
            fi
          done

          echo "‚ùå Health check failed after 5 attempts"
          exit 1
